,'A34D5D6PU193AR'
),]
nrow(d_respondents_only)
# d <- fread('Lungs_November+14,+2020_17.33.csv')
d <- fread('../check-valid-responses/data/qualtrics_results_final.csv')
#head(d)
# These WorkerId put in all 1 response (all Normal or all Pneumonia)
d_respondents_only <-
d[Q80 %in% c(
"A119EX2L0DNN1B",
"A12NQJV6TA5OWB",
"A18WFPSLFV4FKY",
"A1BUYK6LXYWMLL",
"A1FHRZXSE7XNJ4",
"A1GMYDH5MKN105",
"A2GSZ3D2XXC533",
"A2IGIOD74EPOEF",
"A2J016DRTOBXWO",
"A2NGFU82LMJ80X",
"A32K1M0A36EAK5",
"A371SNJNNUY9Z6",
"A3BPENSX5EVJ2H",
"A3EPIT2P3ISA3K",
"A3NYIJYBHAJ74V",
"AUFLTHQAXWLH1",
"AVINXZZV3FNG7" ,
"A1CD7O60QAQQRT",
"A1CF1W8CP0DHB0",
"A1PGY59BR6C5BX",
"A1YSYI926BBOHW",
"A1Z3GFH6MNSU46",
"A211KGJ94WNFLN",
"A26RPQDD0RQEHL",
"A2BUHMLNE3LUU0",
"A2J5BRQ88W745H",
"A2XIHO2W7EEP32",
"A3EZ0H07TSDAPW",
"A3FLBC6LC5GJ3W",
"A3QLKLIQW1B1FR",
"A8F6JFG0WSELT",
"A9K6IVBA0J1CX",
"ADLZLGHKOAEE6",
"AE7NJG0KOVZYJ" ,
"AG5RF4UGQJ7A7" ,
"AQ9Y6WD8O72ZC" ,
"tuturtu",
'A1W05TSPORJPXR',
'A3SUWCLD1GEGM7',
'A3A09JB9X1RBXW',
'A7VQQEIBSM9IU',
'A8DER1QY96C5X',
'A1M8MNKK8H5ZGW',
'A34D5D6PU193AR'), ]
nrow(d_respondents_only)
# These WorkerId put in all 1 response (all Normal or all Pneumonia)
# These people just gave alternating responses (Normal, Pneumonia, Normal,...,Pneumonia)
d_respondents_noncompliers <-
d[Q80 %in% c(
"A119EX2L0DNN1B",
"A12NQJV6TA5OWB",
"A18WFPSLFV4FKY",
"A1BUYK6LXYWMLL",
"A1FHRZXSE7XNJ4",
"A1GMYDH5MKN105",
"A2GSZ3D2XXC533",
"A2IGIOD74EPOEF",
"A2J016DRTOBXWO",
"A2NGFU82LMJ80X",
"A32K1M0A36EAK5",
"A371SNJNNUY9Z6",
"A3BPENSX5EVJ2H",
"A3EPIT2P3ISA3K",
"A3NYIJYBHAJ74V",
"AUFLTHQAXWLH1",
"AVINXZZV3FNG7" ,
"A1CD7O60QAQQRT",
"A1CF1W8CP0DHB0",
"A1PGY59BR6C5BX",
"A1YSYI926BBOHW",
"A1Z3GFH6MNSU46",
"A211KGJ94WNFLN",
"A26RPQDD0RQEHL",
"A2BUHMLNE3LUU0",
"A2J5BRQ88W745H",
"A2XIHO2W7EEP32",
"A3EZ0H07TSDAPW",
"A3FLBC6LC5GJ3W",
"A3QLKLIQW1B1FR",
"A8F6JFG0WSELT",
"A9K6IVBA0J1CX",
"ADLZLGHKOAEE6",
"AE7NJG0KOVZYJ" ,
"AG5RF4UGQJ7A7" ,
"AQ9Y6WD8O72ZC" ,
"tuturtu",
'A1W05TSPORJPXR',
'A3SUWCLD1GEGM7',
'A3A09JB9X1RBXW',
'A7VQQEIBSM9IU',
'A8DER1QY96C5X',
'A1M8MNKK8H5ZGW',
'A34D5D6PU193AR'), ]
nrow(d_respondents_noncompliers)
head(d_respondents_noncompliers)
unique(d_respondents_compliers$Finished)
unique(d_respondents_noncompliers$Finished)
d_respondents_noncompliers[ Finished == "False", ]
# d <- fread('Lungs_November+14,+2020_17.33.csv')
d <- fread('../check-valid-responses/data/qualtrics_results_final.csv')
#head(d)
d_respondents_only <-
d[(Status == "IP Address") & (Finished == 'True'),]
# These WorkerId put in all 1 response (all Normal or all Pneumonia)
# These people just gave alternating responses (Normal, Pneumonia, Normal,...,Pneumonia)
d_respondents_noncompliers <-
d_respondents_only[Q80 %in% c(
"A119EX2L0DNN1B",
"A12NQJV6TA5OWB",
"A18WFPSLFV4FKY",
"A1BUYK6LXYWMLL",
"A1FHRZXSE7XNJ4",
"A1GMYDH5MKN105",
"A2GSZ3D2XXC533",
"A2IGIOD74EPOEF",
"A2J016DRTOBXWO",
"A2NGFU82LMJ80X",
"A32K1M0A36EAK5",
"A371SNJNNUY9Z6",
"A3BPENSX5EVJ2H",
"A3EPIT2P3ISA3K",
"A3NYIJYBHAJ74V",
"AUFLTHQAXWLH1",
"AVINXZZV3FNG7" ,
"A1CD7O60QAQQRT",
"A1CF1W8CP0DHB0",
"A1PGY59BR6C5BX",
"A1YSYI926BBOHW",
"A1Z3GFH6MNSU46",
"A211KGJ94WNFLN",
"A26RPQDD0RQEHL",
"A2BUHMLNE3LUU0",
"A2J5BRQ88W745H",
"A2XIHO2W7EEP32",
"A3EZ0H07TSDAPW",
"A3FLBC6LC5GJ3W",
"A3QLKLIQW1B1FR",
"A8F6JFG0WSELT",
"A9K6IVBA0J1CX",
"ADLZLGHKOAEE6",
"AE7NJG0KOVZYJ" ,
"AG5RF4UGQJ7A7" ,
"AQ9Y6WD8O72ZC" ,
"tuturtu",
'A1W05TSPORJPXR',
'A3SUWCLD1GEGM7',
'A3A09JB9X1RBXW',
'A7VQQEIBSM9IU',
'A8DER1QY96C5X',
'A1M8MNKK8H5ZGW',
'A34D5D6PU193AR'), ]
nrow(d_respondents_noncompliers)
d_respondents_noncompliers[ Finished == "False", ]
nrow(d_respondents_noncompliers)
# d <- fread('Lungs_November+14,+2020_17.33.csv')
d <- fread('../check-valid-responses/data/qualtrics_results_final.csv')
#head(d)
d_respondents_only <-
d[(Status == "IP Address"),] #& (Finished == 'True'),]
# These WorkerId put in all 1 response (all Normal or all Pneumonia)
# These people just gave alternating responses (Normal, Pneumonia, Normal,...,Pneumonia)
d_respondents_noncompliers <-
d_respondents_only[Q80 %in% c(
"A119EX2L0DNN1B",
"A12NQJV6TA5OWB",
"A18WFPSLFV4FKY",
"A1BUYK6LXYWMLL",
"A1FHRZXSE7XNJ4",
"A1GMYDH5MKN105",
"A2GSZ3D2XXC533",
"A2IGIOD74EPOEF",
"A2J016DRTOBXWO",
"A2NGFU82LMJ80X",
"A32K1M0A36EAK5",
"A371SNJNNUY9Z6",
"A3BPENSX5EVJ2H",
"A3EPIT2P3ISA3K",
"A3NYIJYBHAJ74V",
"AUFLTHQAXWLH1",
"AVINXZZV3FNG7" ,
"A1CD7O60QAQQRT",
"A1CF1W8CP0DHB0",
"A1PGY59BR6C5BX",
"A1YSYI926BBOHW",
"A1Z3GFH6MNSU46",
"A211KGJ94WNFLN",
"A26RPQDD0RQEHL",
"A2BUHMLNE3LUU0",
"A2J5BRQ88W745H",
"A2XIHO2W7EEP32",
"A3EZ0H07TSDAPW",
"A3FLBC6LC5GJ3W",
"A3QLKLIQW1B1FR",
"A8F6JFG0WSELT",
"A9K6IVBA0J1CX",
"ADLZLGHKOAEE6",
"AE7NJG0KOVZYJ" ,
"AG5RF4UGQJ7A7" ,
"AQ9Y6WD8O72ZC" ,
"tuturtu",
'A1W05TSPORJPXR',
'A3SUWCLD1GEGM7',
'A3A09JB9X1RBXW',
'A7VQQEIBSM9IU',
'A8DER1QY96C5X',
'A1M8MNKK8H5ZGW',
'A34D5D6PU193AR'), ]
nrow(d_respondents_noncompliers)
d_respondents_noncompliers[ Finished == "False", ]
nrow(d_respondents_noncompliers)
nrow(d_respondents_noncompliers)
duplicated(d_respondents_noncompliers, by = "Q80")
d_respondents_noncompliers[duplicated(d_respondents_noncompliers, by = "Q80") == FALSE, ]
d_respondents_noncompliers <- d_respondents_noncompliers[duplicated(d_respondents_noncompliers, by = "Q80") == FALSE, ]
nrow(d_respondents_noncompliers)
#rename task phase questions
setnames(d_respondents_noncompliers,
old = c('Q2', 'Q42'),
new = c('Self_Reflect_Q1', 'Self_Reflect_Q2'))
setnames(d_respondents_noncompliers,
old = c('Q69', 'Q89'),
new = c('Control_Q1', 'Control_Q2'))
setnames(d_respondents_noncompliers,
old = c('Q80', 'Q82', 'Q83', 'Q84', 'SC0', 'FL_6_DO'),
new = c('Amazon_Turk_ID', 'Gender', 'Age_Range', 'Education_Level', 'Total_Score', 'Assignment'))
setnames(d_respondents_noncompliers,
old = c('Q1', 'Q5', 'Q6', 'Q7', 'Q16', 'Q17', 'Q18', 'Q19', 'Q20', 'Q21',
'Q8', 'Q9', 'Q10', 'Q11', 'Q22', 'Q23', 'Q24', 'Q25', 'Q26', 'Q27',
'Q12', 'Q13', 'Q14', 'Q15', 'Q28', 'Q29', 'Q30', 'Q31', 'Q32', 'Q33'),
new = c('Q1', 'Q2', 'Q3', 'Q4', 'Q5', 'Q6', 'Q7', 'Q8', 'Q9', 'Q10',
'Q11', 'Q12', 'Q13', 'Q14', 'Q15', 'Q16', 'Q17', 'Q18', 'Q19', 'Q20',
'Q21', 'Q22', 'Q23', 'Q24', 'Q25', 'Q26', 'Q27', 'Q28', 'Q29', 'Q30'))
d_respondents_noncompliers[ , c("Q1_Score", "Q2_Score", "Q3_Score", "Q4_Score", "Q5_Score",
"Q6_Score", "Q7_Score", "Q8_Score", "Q9_Score", "Q10_Score",
"Q11_Score", "Q12_Score", "Q13_Score", "Q14_Score", "Q15_Score",
"Q16_Score", "Q17_Score", "Q18_Score", "Q19_Score", "Q20_Score",
"Q21_Score", "Q22_Score", "Q23_Score", "Q24_Score", "Q25_Score", "Q26_Score",
"Q27_Score", "Q28_Score", "Q29_Score", "Q30_Score") :=
list(ifelse(Q1 == "Normal", 1, 0),
ifelse(Q2 == "Normal", 1, 0),
ifelse(Q3 == "Pneumonia", 1, 0),
ifelse(Q4 == "Pneumonia", 1, 0),
ifelse(Q5 == "Normal", 1, 0),
ifelse(Q6 == "Pneumonia", 1, 0),
ifelse(Q7 == "Pneumonia", 1, 0),
ifelse(Q8 == "Normal", 1, 0),
ifelse(Q9 == "Pneumonia", 1, 0),
ifelse(Q10 == "Normal", 1, 0),
ifelse(Q11 == "Pneumonia", 1, 0),
ifelse(Q12 == "Normal", 1, 0),
ifelse(Q13 == "Pneumonia", 1, 0),
ifelse(Q14 == "Pneumonia", 1, 0),
ifelse(Q15 == "Normal", 1, 0),
ifelse(Q16 == "Normal", 1, 0),
ifelse(Q17 == "Pneumonia", 1, 0),
ifelse(Q18 == "Normal", 1, 0),
ifelse(Q19 == "Pneumonia", 1, 0),
ifelse(Q20 == "Normal", 1, 0),
ifelse(Q21 == "Normal", 1, 0),
ifelse(Q22 == "Normal", 1, 0),
ifelse(Q23 == "Pneumonia", 1, 0),
ifelse(Q24 == "Normal", 1, 0),
ifelse(Q25 == "Pneumonia", 1, 0),
ifelse(Q26 == "Pneumonia", 1, 0),
ifelse(Q27 == "Pneumonia", 1, 0),
ifelse(Q28 == "Pneumonia", 1, 0),
ifelse(Q29 == "Normal", 1, 0),
ifelse(Q30 == "Normal", 1, 0))]
d_respondents_noncompliers[ , Assignment_Group := ifelse(Assignment == "FL_17", "Control",
ifelse(Assignment == "FL_14", "Self-Reflect",
ifelse(Assignment == "FL_15", "Medical Feedback",
ifelse(Assignment == "FL_16", "Positive Images", "Negative Images"))))]
d_respondents_noncompliers[ , c("TaskPhase1_Score", "TaskPhase2_Score", "TaskPhase3_Score") :=
list(sum(Q1_Score, Q2_Score, Q3_Score, Q4_Score, Q5_Score, Q6_Score, Q7_Score, Q8_Score, Q9_Score, Q10_Score)/10,
sum(Q11_Score, Q12_Score, Q13_Score, Q14_Score, Q15_Score, Q16_Score, Q17_Score, Q18_Score, Q19_Score, Q20_Score)/10,
sum(Q21_Score, Q22_Score, Q23_Score, Q24_Score, Q25_Score, Q26_Score, Q27_Score, Q28_Score, Q29_Score, Q30_Score)/10),
by = Amazon_Turk_ID]
head(d_respondents_noncompliers)
d_respondents_noncompliers[ , table(Assignment_Group)]
# d <- fread('Lungs_November+14,+2020_17.33.csv')
d <- fread('../check-valid-responses/data/qualtrics_results_final.csv')
#head(d)
d_respondents_only <-
d[(Status == "IP Address") & (Finished == 'True'),]
# Remove these survey responses because they were from people who did the survey again. Double check that they are removed:
d_respondents_only <-
d_respondents_only[!ResponseId %in% c(
'R_1eRkKqfVAmkVzj2',
'R_3FR03xu5zyOsRSU',
'R_3HBQsMSMCgXPpKf',
'R_dbzictBknL9jG3T'
), ]
# These WorkerId put in all 1 response (all Normal or all Pneumonia)
d_respondents_only <-
d_respondents_only[!Q80 %in% c(
"A119EX2L0DNN1B",
"A12NQJV6TA5OWB",
"A18WFPSLFV4FKY",
"A1BUYK6LXYWMLL",
"A1FHRZXSE7XNJ4",
"A1GMYDH5MKN105",
"A2GSZ3D2XXC533",
"A2IGIOD74EPOEF",
"A2J016DRTOBXWO",
"A2NGFU82LMJ80X",
"A32K1M0A36EAK5",
"A371SNJNNUY9Z6",
"A3BPENSX5EVJ2H",
"A3EPIT2P3ISA3K",
"A3NYIJYBHAJ74V",
"AUFLTHQAXWLH1",
"AVINXZZV3FNG7" ,
"A1CD7O60QAQQRT",
"A1CF1W8CP0DHB0",
"A1PGY59BR6C5BX",
"A1YSYI926BBOHW",
"A1Z3GFH6MNSU46",
"A211KGJ94WNFLN",
"A26RPQDD0RQEHL",
"A2BUHMLNE3LUU0",
"A2J5BRQ88W745H",
"A2XIHO2W7EEP32",
"A3EZ0H07TSDAPW",
"A3FLBC6LC5GJ3W",
"A3QLKLIQW1B1FR",
"A8F6JFG0WSELT",
"A9K6IVBA0J1CX",
"ADLZLGHKOAEE6",
"AE7NJG0KOVZYJ" ,
"AG5RF4UGQJ7A7" ,
"AQ9Y6WD8O72ZC" ,
"tuturtu"
), ]
# These people just gave alternating responses (Normal, Pneumonia, Normal,...,Pneumonia)
d_respondents_only <- d_respondents_only[!Q80 %in% c(
'A1W05TSPORJPXR'
,'A3SUWCLD1GEGM7'
,'A3A09JB9X1RBXW'
,'A7VQQEIBSM9IU'
,'A8DER1QY96C5X'
,'A1M8MNKK8H5ZGW'
,'A34D5D6PU193AR'
),]
#head(d_respondents_only)
#rename task phase questions
setnames(d_respondents_only,
old = c('Q2', 'Q42'),
new = c('Self_Reflect_Q1', 'Self_Reflect_Q2'))
setnames(d_respondents_only,
old = c('Q69', 'Q89'),
new = c('Control_Q1', 'Control_Q2'))
setnames(d_respondents_only,
old = c('Q80', 'Q82', 'Q83', 'Q84', 'SC0', 'FL_6_DO'),
new = c('Amazon_Turk_ID', 'Gender', 'Age_Range', 'Education_Level', 'Total_Score', 'Assignment'))
setnames(d_respondents_only,
old = c('Q1', 'Q5', 'Q6', 'Q7', 'Q16', 'Q17', 'Q18', 'Q19', 'Q20', 'Q21',
'Q8', 'Q9', 'Q10', 'Q11', 'Q22', 'Q23', 'Q24', 'Q25', 'Q26', 'Q27',
'Q12', 'Q13', 'Q14', 'Q15', 'Q28', 'Q29', 'Q30', 'Q31', 'Q32', 'Q33'),
new = c('Q1', 'Q2', 'Q3', 'Q4', 'Q5', 'Q6', 'Q7', 'Q8', 'Q9', 'Q10',
'Q11', 'Q12', 'Q13', 'Q14', 'Q15', 'Q16', 'Q17', 'Q18', 'Q19', 'Q20',
'Q21', 'Q22', 'Q23', 'Q24', 'Q25', 'Q26', 'Q27', 'Q28', 'Q29', 'Q30'))
d_respondents_only[ , c("Q1_Score", "Q2_Score", "Q3_Score", "Q4_Score", "Q5_Score",
"Q6_Score", "Q7_Score", "Q8_Score", "Q9_Score", "Q10_Score",
"Q11_Score", "Q12_Score", "Q13_Score", "Q14_Score", "Q15_Score",
"Q16_Score", "Q17_Score", "Q18_Score", "Q19_Score", "Q20_Score",
"Q21_Score", "Q22_Score", "Q23_Score", "Q24_Score", "Q25_Score", "Q26_Score",
"Q27_Score", "Q28_Score", "Q29_Score", "Q30_Score") :=
list(ifelse(Q1 == "Normal", 1, 0),
ifelse(Q2 == "Normal", 1, 0),
ifelse(Q3 == "Pneumonia", 1, 0),
ifelse(Q4 == "Pneumonia", 1, 0),
ifelse(Q5 == "Normal", 1, 0),
ifelse(Q6 == "Pneumonia", 1, 0),
ifelse(Q7 == "Pneumonia", 1, 0),
ifelse(Q8 == "Normal", 1, 0),
ifelse(Q9 == "Pneumonia", 1, 0),
ifelse(Q10 == "Normal", 1, 0),
ifelse(Q11 == "Pneumonia", 1, 0),
ifelse(Q12 == "Normal", 1, 0),
ifelse(Q13 == "Pneumonia", 1, 0),
ifelse(Q14 == "Pneumonia", 1, 0),
ifelse(Q15 == "Normal", 1, 0),
ifelse(Q16 == "Normal", 1, 0),
ifelse(Q17 == "Pneumonia", 1, 0),
ifelse(Q18 == "Normal", 1, 0),
ifelse(Q19 == "Pneumonia", 1, 0),
ifelse(Q20 == "Normal", 1, 0),
ifelse(Q21 == "Normal", 1, 0),
ifelse(Q22 == "Normal", 1, 0),
ifelse(Q23 == "Pneumonia", 1, 0),
ifelse(Q24 == "Normal", 1, 0),
ifelse(Q25 == "Pneumonia", 1, 0),
ifelse(Q26 == "Pneumonia", 1, 0),
ifelse(Q27 == "Pneumonia", 1, 0),
ifelse(Q28 == "Pneumonia", 1, 0),
ifelse(Q29 == "Normal", 1, 0),
ifelse(Q30 == "Normal", 1, 0))]
d_respondents_only[ , Assignment_Group := ifelse(Assignment == "FL_17", "Control",
ifelse(Assignment == "FL_14", "Self-Reflect",
ifelse(Assignment == "FL_15", "Medical Feedback",
ifelse(Assignment == "FL_16", "Positive Images", "Negative Images"))))]
d_respondents_only[ , c("TaskPhase1_Score", "TaskPhase2_Score", "TaskPhase3_Score") :=
list(sum(Q1_Score, Q2_Score, Q3_Score, Q4_Score, Q5_Score, Q6_Score, Q7_Score, Q8_Score, Q9_Score, Q10_Score)/10,
sum(Q11_Score, Q12_Score, Q13_Score, Q14_Score, Q15_Score, Q16_Score, Q17_Score, Q18_Score, Q19_Score, Q20_Score)/10,
sum(Q21_Score, Q22_Score, Q23_Score, Q24_Score, Q25_Score, Q26_Score, Q27_Score, Q28_Score, Q29_Score, Q30_Score)/10),
by = Amazon_Turk_ID]
#head(d_respondents_only)
# ?register_google
# register_google(key = "AIzaSyCTk2a5vIEqcvgz9KmQmItoNF7J8_hiMMk")
#
# #uses Google API to obtain location data based on longitude and latitude....dont use unless necessary for new data
# d_respondents_only[ , c("housenumber", "street", "city", "county", "state", "zip", "country") := revgeo(as.numeric(LocationLongitude),as.numeric(LocationLatitude), provider = 'google', API = "AIzaSyCTk2a5vIEqcvgz9KmQmItoNF7J8_hiMMk", output='frame')]
# #
# head(d_respondents_only)
# #
# #
# fwrite(d_respondents_only, file='datatable_clean_survey_responses_v2.dta')
d_respondents <- fread('datatable_clean_survey_responses_v2.dta')
setnames(d_respondents,
old = c('Duration (in seconds)'),
new = c('Survey_Duration'))
kable(t(head(d_respondents[, names(d_respondents)[!names(d_respondents) %in% c(
"Q70_First Click","Q70_Last Click","Q70_Page Submit","Q70_Click Count",
"Q90_First Click","Q90_Last Click","Q90_Page Submit","Q90_Click Count",
"Q61_First Click","Q61_Last Click","Q61_Page Submit","Q61_Click Count",
"Q62_First Click","Q62_Last Click","Q62_Page Submit","Q62_Click Count",
"Q63_First Click","Q63_Last Click","Q63_Page Submit","Q63_Click Count",
"Q64_First Click","Q64_Last Click","Q64_Page Submit","Q64_Click Count",
"Q65_First Click","Q65_Last Click","Q65_Page Submit","Q65_Click Count",
"Q66_First Click","Q66_Last Click","Q66_Page Submit","Q66_Click Count",
"Q67_First Click","Q67_Last Click","Q67_Page Submit","Q67_Click Count",
"Q68_First Click","Q68_Last Click","Q68_Page Submit","Q68_Click Count",
"housenumber","street","zip")],with=FALSE],3)))
d_respondents
d_respondents_noncompliers
d_respondents
d_respondents_noncompliers
d_respondents_noncompliers[ , Treatment_Dummy := ifelse(Assignment_Group != "Control", 1, 0)]
head(d_respondents_noncompliers)
d_respondents_compliers <- d_respondents[, c("housenumber","street","city",
"county","state","zip","country",
"US_Dummy")]
head(d_respondents_compliers)
d_respondents_compliers <- d_respondents[, c("housenumber","street","city",
"county","state","zip","country",
"US_Dummy"):=NULL]
head(d_respondents_compliers)
d_respondents_noncompliers
d_respondents_noncompliers[ , Treatment_Dummy := ifelse(Assignment_Group != "Control", 1, 0)]
head(d_respondents_noncompliers)
d_respondents_compliers[ , Complier_Dummy := 1]
d_respondents_noncompliers[ , Complier_Dummy := 0]
d_merge_respondents_noncompliers_compliers <- merge(d_respondents_compliers, d_respondents_noncompliers)
head(d_respondents_compliers)
head(d_respondents_noncompliers)
head(d_respondents_compliers)
head(d_respondents_noncompliers)
?rbind
d_merge_respondents_noncompliers_compliers <- rbind(c(d_respondents_compliers, d_respondents_noncompliers))
d_merge_respondents_noncompliers_compliers
d_merge_respondents_noncompliers_compliers <- rbind(d_respondents_compliers, d_respondents_noncompliers)
d_merge_respondents_noncompliers_compliers <- rbind(d_respondents_compliers, d_respondents_noncompliers, fill=TRUE)
head(d_merge_respondents_noncompliers_compliers)
d_merge_respondents_noncompliers_compliers[ Treatment_Dummy == 1, mean(TaskPhase2_Score)]
d_merge_respondents_noncompliers_compliers[ Treatment_Dummy == 0, mean(TaskPhase2_Score)]
nrow(d_merge_respondents_noncompliers_compliers)
nrow(d_merge_respondents_noncompliers_compliers[ Assignment_Group=="Medical Feedback" & Complier_Dummy==1, ])
nrow(d_merge_respondents_noncompliers_compliers[ Assignment_Group == "Medical Feedback",])
total_MedFeedback_compliers <- nrow(d_merge_respondents_noncompliers_compliers[ Assignment_Group=="Medical Feedback" & Complier_Dummy==1, ])
total_MedFeedback_rows <- nrow(d_merge_respondents_noncompliers_compliers[ Assignment_Group == "Medical Feedback",])
total_MedFeedback_compliers/total_MedFeedback_rows
# d_merge_respondents_noncompliers_compliers[ Treatment_Dummy == 1, mean(TaskPhase2_Score)]
# d_merge_respondents_noncompliers_compliers[ Treatment_Dummy == 0, mean(TaskPhase2_Score)]
#### Take-Up Rates for Medical Feedback
total_MedFeedback_compliers <- nrow(d_merge_respondents_noncompliers_compliers[ Assignment_Group=="Medical Feedback" & Complier_Dummy==1, ])
total_MedFeedback_rows <- nrow(d_merge_respondents_noncompliers_compliers[ Assignment_Group == "Medical Feedback",])
total_MedFeedback_compliers/total_MedFeedback_rows
#### Take-Up Rates for Self-Reflect
total_selfreflect_compliers <- nrow(d_merge_respondents_noncompliers_compliers[ Assignment_Group=="Self-Reflect" & Complier_Dummy==1, ])
total_selfreflect_rows <- nrow(d_merge_respondents_noncompliers_compliers[ Assignment_Group == "Self-Reflect",])
total_selfreflect_compliers/total_selfreflect_rows
#### Take-Up Rates for Positive Images
total_positiveimages_compliers <- nrow(d_merge_respondents_noncompliers_compliers[ Assignment_Group=="Positive Images" & Complier_Dummy==1, ])
total_positiveimages_rows <- nrow(d_merge_respondents_noncompliers_compliers[ Assignment_Group == "Positive Images",])
total_positiveimages_compliers/total_positiveimages_rows
#### Take-Up Rates for Negative Images
total_negativeimages_compliers <- nrow(d_merge_respondents_noncompliers_compliers[ Assignment_Group=="Negative Images" & Complier_Dummy==1, ])
total_negativeimages_rows <- nrow(d_merge_respondents_noncompliers_compliers[ Assignment_Group == "Negative Images",])
total_negativeimages_compliers/total_negativeimages_rows
#### Take-Up Rates for Control
total_control_compliers <- nrow(d_merge_respondents_noncompliers_compliers[ Assignment_Group=="Control" & Complier_Dummy==1, ])
total_control_rows <- nrow(d_merge_respondents_noncompliers_compliers[ Assignment_Group == "Control",])
total_control_compliers/total_control_rows
d_merge_respondents_noncompliers_compliers[Assignment_Group != "Control", ivreg(TaskPhase2_Score ~ Complier_Dummy, ~Assignment_Group)]
#estimate CACE of receiving control
d_merge_respondents_noncompliers_compliers[Assignment_Group == "Control",
ivreg(TaskPhase2_Score ~ Complier_Dummy,
~Assignment_Group)]
#estimate CACE of receiving treatment
d_merge_respondents_noncompliers_compliers[Assignment_Group != "Control",
ivreg(TaskPhase2_Score ~ Complier_Dummy,
~Assignment_Group)]
d_respondents_noncompliers[ , table(Assignment_Group)]
