"A26RPQDD0RQEHL",
"A2BUHMLNE3LUU0",
"A2J5BRQ88W745H",
"A2XIHO2W7EEP32",
"A3EZ0H07TSDAPW",
"A3FLBC6LC5GJ3W",
"A3QLKLIQW1B1FR",
"A8F6JFG0WSELT",
"A9K6IVBA0J1CX",
"ADLZLGHKOAEE6",
"AE7NJG0KOVZYJ" ,
"AG5RF4UGQJ7A7" ,
"AQ9Y6WD8O72ZC" ,
"tuturtu"
), ]
# These people just gave alternating responses (Normal, Pneumonia, Normal,...,Pneumonia)
d_respondents_only <- d_respondents_only[!Q80 %in% c(
'A1W05TSPORJPXR'
,'A3SUWCLD1GEGM7'
,'A3A09JB9X1RBXW'
,'A7VQQEIBSM9IU'
,'A8DER1QY96C5X'
,'A1M8MNKK8H5ZGW'
,'A34D5D6PU193AR'
),]
#head(d_respondents_only)
#rename task phase questions
setnames(d_respondents_only,
old = c('Q2', 'Q42'),
new = c('Self_Reflect_Q1', 'Self_Reflect_Q2'))
setnames(d_respondents_only,
old = c('Q69', 'Q89'),
new = c('Control_Q1', 'Control_Q2'))
setnames(d_respondents_only,
old = c('Q80', 'Q82', 'Q83', 'Q84', 'SC0', 'FL_6_DO'),
new = c('Amazon_Turk_ID', 'Gender', 'Age_Range', 'Education_Level', 'Total_Score', 'Assignment'))
setnames(d_respondents_only,
old = c('Q1', 'Q5', 'Q6', 'Q7', 'Q16', 'Q17', 'Q18', 'Q19', 'Q20', 'Q21',
'Q8', 'Q9', 'Q10', 'Q11', 'Q22', 'Q23', 'Q24', 'Q25', 'Q26', 'Q27',
'Q12', 'Q13', 'Q14', 'Q15', 'Q28', 'Q29', 'Q30', 'Q31', 'Q32', 'Q33'),
new = c('Q1', 'Q2', 'Q3', 'Q4', 'Q5', 'Q6', 'Q7', 'Q8', 'Q9', 'Q10',
'Q11', 'Q12', 'Q13', 'Q14', 'Q15', 'Q16', 'Q17', 'Q18', 'Q19', 'Q20',
'Q21', 'Q22', 'Q23', 'Q24', 'Q25', 'Q26', 'Q27', 'Q28', 'Q29', 'Q30'))
d_respondents_only[ , c("Q1_Score", "Q2_Score", "Q3_Score", "Q4_Score", "Q5_Score",
"Q6_Score", "Q7_Score", "Q8_Score", "Q9_Score", "Q10_Score",
"Q11_Score", "Q12_Score", "Q13_Score", "Q14_Score", "Q15_Score",
"Q16_Score", "Q17_Score", "Q18_Score", "Q19_Score", "Q20_Score",
"Q21_Score", "Q22_Score", "Q23_Score", "Q24_Score", "Q25_Score", "Q26_Score",
"Q27_Score", "Q28_Score", "Q29_Score", "Q30_Score") :=
list(ifelse(Q1 == "Normal", 1, 0),
ifelse(Q2 == "Normal", 1, 0),
ifelse(Q3 == "Pneumonia", 1, 0),
ifelse(Q4 == "Pneumonia", 1, 0),
ifelse(Q5 == "Normal", 1, 0),
ifelse(Q6 == "Pneumonia", 1, 0),
ifelse(Q7 == "Pneumonia", 1, 0),
ifelse(Q8 == "Normal", 1, 0),
ifelse(Q9 == "Pneumonia", 1, 0),
ifelse(Q10 == "Normal", 1, 0),
ifelse(Q11 == "Pneumonia", 1, 0),
ifelse(Q12 == "Normal", 1, 0),
ifelse(Q13 == "Pneumonia", 1, 0),
ifelse(Q14 == "Pneumonia", 1, 0),
ifelse(Q15 == "Normal", 1, 0),
ifelse(Q16 == "Normal", 1, 0),
ifelse(Q17 == "Pneumonia", 1, 0),
ifelse(Q18 == "Normal", 1, 0),
ifelse(Q19 == "Pneumonia", 1, 0),
ifelse(Q20 == "Normal", 1, 0),
ifelse(Q21 == "Normal", 1, 0),
ifelse(Q22 == "Normal", 1, 0),
ifelse(Q23 == "Pneumonia", 1, 0),
ifelse(Q24 == "Normal", 1, 0),
ifelse(Q25 == "Pneumonia", 1, 0),
ifelse(Q26 == "Pneumonia", 1, 0),
ifelse(Q27 == "Pneumonia", 1, 0),
ifelse(Q28 == "Pneumonia", 1, 0),
ifelse(Q29 == "Normal", 1, 0),
ifelse(Q30 == "Normal", 1, 0))]
d_respondents_only[ , Assignment_Group := ifelse(Assignment == "FL_17", "Control",
ifelse(Assignment == "FL_14", "Self-Reflect",
ifelse(Assignment == "FL_15", "Medical Feedback",
ifelse(Assignment == "FL_16", "Positive Images", "Negative Images"))))]
d_respondents_only[ , c("TaskPhase1_Score", "TaskPhase2_Score", "TaskPhase3_Score") :=
list(sum(Q1_Score, Q2_Score, Q3_Score, Q4_Score, Q5_Score, Q6_Score, Q7_Score, Q8_Score, Q9_Score, Q10_Score)/10,
sum(Q11_Score, Q12_Score, Q13_Score, Q14_Score, Q15_Score, Q16_Score, Q17_Score, Q18_Score, Q19_Score, Q20_Score)/10,
sum(Q21_Score, Q22_Score, Q23_Score, Q24_Score, Q25_Score, Q26_Score, Q27_Score, Q28_Score, Q29_Score, Q30_Score)/10),
by = Amazon_Turk_ID]
#head(d_respondents_only)
# ?register_google
# register_google(key = "AIzaSyCTk2a5vIEqcvgz9KmQmItoNF7J8_hiMMk")
#
# #uses Google API to obtain location data based on longitude and latitude....dont use unless necessary for new data
# d_respondents_only[ , c("housenumber", "street", "city", "county", "state", "zip", "country") := revgeo(as.numeric(LocationLongitude),as.numeric(LocationLatitude), provider = 'google', API = "AIzaSyCTk2a5vIEqcvgz9KmQmItoNF7J8_hiMMk", output='frame')]
# #
# head(d_respondents_only)
# #
# #
# fwrite(d_respondents_only, file='datatable_clean_survey_responses_v2.dta')
d_respondents <- fread('datatable_clean_survey_responses_v2.dta')
setnames(d_respondents,
old = c('Duration (in seconds)'),
new = c('Survey_Duration'))
kable(t(head(d_respondents[, names(d_respondents)[!names(d_respondents) %in% c(
"Q70_First Click","Q70_Last Click","Q70_Page Submit","Q70_Click Count",
"Q90_First Click","Q90_Last Click","Q90_Page Submit","Q90_Click Count",
"Q61_First Click","Q61_Last Click","Q61_Page Submit","Q61_Click Count",
"Q62_First Click","Q62_Last Click","Q62_Page Submit","Q62_Click Count",
"Q63_First Click","Q63_Last Click","Q63_Page Submit","Q63_Click Count",
"Q64_First Click","Q64_Last Click","Q64_Page Submit","Q64_Click Count",
"Q65_First Click","Q65_Last Click","Q65_Page Submit","Q65_Click Count",
"Q66_First Click","Q66_Last Click","Q66_Page Submit","Q66_Click Count",
"Q67_First Click","Q67_Last Click","Q67_Page Submit","Q67_Click Count",
"Q68_First Click","Q68_Last Click","Q68_Page Submit","Q68_Click Count",
"housenumber","street","zip")],with=FALSE],3)))
nrow(d_respondents)
#remove duplicate Amazon Turk IDs
nrow(d_respondents)  #350 rows
d_respondents <- d_respondents[ !duplicated(d_respondents$Amazon_Turk_ID) , ]  #350 rows
head(d_respondents)
d_respondents[, hist(Survey_Duration), by = .(Assignment_Group)]
head(d_respondents)
d_respondents[, hist(Survey_Duration), by = .(Assignment_Group)]
ggplot(d_respondents,aes(x=Survey_Duration, group=Assignment_Group, fill=Assignment_Group))+
geom_histogram(position="dodge",binwidth=0.25)+theme_bw()
ggplot(d_respondents,aes(x=Survey_Duration, group=Assignment_Group, fill=Assignment_Group))+
geom_histogram(position="dodge",binwidth=0.25)+theme_bw()
ggplot(data=d_respondents,aes(x=d_respondents$Survey_Duration, group=d_respondents$Assignment_Group, fill=d_respondents$Assignment_Group))+
geom_histogram(position="dodge",binwidth=0.25)+theme_bw()
ggplot(data=d_respondents, aes(d_respondents$Survey_Duration)) + geom_histogram()
ggplot(data=d_respondents, aes(d_respondents$Survey_Duration, group=d_respondents$Assignment_Group)) + geom_histogram()
ggplot(data=d_respondents, aes(d_respondents$Survey_Duration, group=d_respondents$Assignment_Group, fill=d_respondents$Assignment_Group)) + geom_histogram()
ggplot(data=d_respondents, aes(d_respondents$Survey_Duration, fill=d_respondents$Assignment_Group)) + geom_histogram()
ggplot(data=d_respondents, aes(d_respondents$Survey_Duration, fill=d_respondents$Assignment_Group)) + geom_histogram(stat="identity",position='dodge')
ggplot(data=d_respondents, aes(d_respondents$Survey_Duration, fill=d_respondents$Assignment_Group)) + geom_histogram(position = "identity", alpha = 0.4)
ggplot(data=d_respondents, aes(x=Survey_Duration)) +
geom_histogram(fill = Assignment_Group) +
facet_grid(race ~ ., scales = "free")
ggplot(data=d_respondents, aes(x=Survey_Duration, fill=Assignment_Group) +
geom_histogram() +
facet_grid(race ~ ., scales = "free")
ggplot(data=d_respondents, aes(x=Survey_Duration, fill=Assignment_Group) +
data=d_respondents[, hist(Survey_Duration)]
data=d_respondents[, hist(Survey_Duration, bins = 10)]
data=d_respondents[, hist(Survey_Duration, breaks = 10)]
data=d_respondents[, hist(Survey_Duration, breaks = 10, xlim = c(0,1000))]
ggplot(d_respondents, aes(x=Survey_Duration, fill = as.factor(Assignment_Group), colour=as.factor(Assignment_Group))) +
geom_density(alpha = 0.2) +
ggtitle("Survey Duration by Assignment Group") +
theme(plot.title = element_text(hjust = 0.5))
d_respondents[Survey_Duration > 5000]
ggplot(d_respondents, aes(x=Survey_Duration, fill = as.factor(Assignment_Group), colour=as.factor(Assignment_Group))) +
geom_density(alpha = 0.2) +
xlim(0,1000)
ggtitle("Survey Duration by Assignment Group") +
theme(plot.title = element_text(hjust = 0.5))
ggplot(d_respondents, aes(x=Survey_Duration, fill = as.factor(Assignment_Group), colour=as.factor(Assignment_Group))) +
geom_density(alpha = 0.2) +
xlim(0,1200)
ggtitle("Survey Duration by Assignment Group") +
theme(plot.title = element_text(hjust = 0.5))
ggplot(d_respondents, aes(x=Survey_Duration, fill = as.factor(Assignment_Group), colour=as.factor(Assignment_Group))) +
geom_density(alpha = 0.2) +
xlim(0,1500)
ggtitle("Survey Duration by Assignment Group") +
theme(plot.title = element_text(hjust = 0.5))
ggplot(d_respondents, aes(x=Survey_Duration, fill = as.factor(Assignment_Group), colour=as.factor(Assignment_Group))) +
geom_density(alpha = 0.2) +
xlim(0,2000)
ggtitle("Survey Duration by Assignment Group") +
theme(plot.title = element_text(hjust = 0.5))
ggplot(d_respondents, aes(x=Survey_Duration, fill = as.factor(Assignment_Group), colour=as.factor(Assignment_Group))) +
geom_density(alpha = 0.2) +
xlim(0,2700)
ggtitle("Survey Duration by Assignment Group") +
theme(plot.title = element_text(hjust = 0.5))
ggplot(d_respondents, aes(x=Survey_Duration, fill = as.factor(Assignment_Group), colour=as.factor(Assignment_Group))) +
geom_density(alpha = 0.2) +
xlim(0,2000)
ggtitle("Survey Duration by Assignment Group") +
theme(plot.title = element_text(hjust = 0.5))
ggplot(d_respondents, aes(x=Survey_Duration, fill = as.factor(Assignment_Group), colour=as.factor(Assignment_Group))) +
geom_density(alpha = 0.2) +
xlim(0,2000)
ggtitle("Survey Duration by Assignment Group") +
theme(plot.title = element_text(hjust = 0.5))
ggplot(d_respondents, aes(x=Survey_Duration, fill = as.factor(Assignment_Group), colour=as.factor(Assignment_Group))) +
geom_density(alpha = 0.5) +
xlim(0,2000)
ggtitle("Survey Duration by Assignment Group") +
theme(plot.title = element_text(hjust = 0.5))
ggplot(d_respondents, aes(x=Survey_Duration, fill = as.factor(Assignment_Group), colour=as.factor(Assignment_Group))) +
geom_density(alpha = 0.4) +
xlim(0,2000)
ggtitle("Survey Duration by Assignment Group") +
theme(plot.title = element_text(hjust = 0.5))
ggplot(d_respondents, aes(x=Survey_Duration, fill = as.factor(Assignment_Group), colour=as.factor(Assignment_Group))) +
geom_density(alpha = 0.35) +
xlim(0,2000)
ggtitle("Survey Duration by Assignment Group") +
theme(plot.title = element_text(hjust = 0.5))
ggplot(d_respondents, aes(x=Survey_Duration/60, fill = as.factor(Assignment_Group), colour=as.factor(Assignment_Group))) +
geom_density(alpha = 0.35) +
xlim(0,2000)
ggtitle("Survey Duration by Assignment Group") +
theme(plot.title = element_text(hjust = 0.5))
ggplot(d_respondents, aes(x=Survey_Duration/60, fill = as.factor(Assignment_Group), colour=as.factor(Assignment_Group))) +
geom_density(alpha = 0.35) +
xlim(0,25)
ggtitle("Survey Duration by Assignment Group") +
theme(plot.title = element_text(hjust = 0.5))
ggplot(d_respondents, aes(x=Survey_Duration/60, fill = as.factor(Assignment_Group), colour=as.factor(Assignment_Group))) +
geom_density(alpha = 0.35) +
xlim(0,30)
ggtitle("Survey Duration by Assignment Group") +
theme(plot.title = element_text(hjust = 0.5))
ggplot(d_respondents, aes(x=Survey_Duration/60, fill = as.factor(Assignment_Group), colour=as.factor(Assignment_Group))) +
geom_density(alpha = 0.35) +
xlim(0,30) +
ggtitle("Survey Duration by Assignment Group") +
theme(plot.title = element_text(hjust = 0.5))
ggplot(d_respondents, aes(x=Survey_Duration/60, fill = as.factor(Assignment_Group), colour=as.factor(Assignment_Group))) +
geom_density(alpha = 0.35) +
xlim(0,30) +
ggtitle("Survey Duration by Assignment Group") +
labs(x = "Minutes") +
theme(plot.title = element_text(hjust = 0.5))
ggplot(d_respondents, aes(x=Survey_Duration/60, fill = as.factor(Assignment_Group), colour=as.factor(Assignment_Group))) +
geom_density(alpha = 0.35) +
xlim(0,30) +
ggtitle("Survey Duration by Assignment Group") +
labs(x = "Minutes") +
geom_vline(20, linetype, color = "blue", size = 0.5)
ggplot(d_respondents, aes(x=Survey_Duration/60, fill = as.factor(Assignment_Group), colour=as.factor(Assignment_Group))) +
geom_density(alpha = 0.35) +
xlim(0,30) +
ggtitle("Survey Duration by Assignment Group") +
labs(x = "Minutes") +
geom_vline(20, linetype, color = "blue", size = 0.5) +
theme(plot.title = element_text(hjust = 0.5))
ggplot(d_respondents, aes(x=Survey_Duration/60, fill = as.factor(Assignment_Group), colour=as.factor(Assignment_Group))) +
geom_density(alpha = 0.35) +
xlim(0,30) +
ggtitle("Survey Duration by Assignment Group") +
labs(x = "Minutes") +
geom_vline(xintercept = 20, linetype, color = "blue", size = 0.5) +
theme(plot.title = element_text(hjust = 0.5))
ggplot(d_respondents, aes(x=Survey_Duration/60, fill = as.factor(Assignment_Group), colour=as.factor(Assignment_Group))) +
geom_density(alpha = 0.35) +
xlim(0,30) +
ggtitle("Survey Duration by Assignment Group") +
labs(x = "Minutes") +
geom_vline(xintercept = 20, linetype="dotted", color = "blue", size = 0.5) +
theme(plot.title = element_text(hjust = 0.5))
ggplot(d_respondents, aes(x=Survey_Duration/60, fill = as.factor(Assignment_Group), colour=as.factor(Assignment_Group))) +
geom_density(alpha = 0.35) +
xlim(0,30) +
ggtitle("Survey Duration by Assignment Group") +
labs(x = "Minutes") +
geom_vline(xintercept = mean(Assignment_Group), linetype="dotted", color = "blue", size = 0.5) +
theme(plot.title = element_text(hjust = 0.5))
ggplot(d_respondents, aes(x=Survey_Duration/60, fill = as.factor(Assignment_Group), colour=as.factor(Assignment_Group))) +
geom_density(alpha = 0.35) +
xlim(0,30) +
ggtitle("Survey Duration by Assignment Group") +
labs(x = "Minutes") +
geom_vline(xintercept = mean(Survey_Duration/60), linetype="dotted", color = "blue", size = 0.5) +
theme(plot.title = element_text(hjust = 0.5))
ggplot(d_respondents, aes(x=Survey_Duration/60, fill = as.factor(Assignment_Group), colour=as.factor(Assignment_Group))) +
geom_density(alpha = 0.35) +
xlim(0,30) +
ggtitle("Survey Duration by Assignment Group") +
labs(x = "Minutes") +
geom_vline(xintercept = mean((d_respondents$Survey_Duration)/60), linetype="dotted", color = "blue", size = 0.5) +
theme(plot.title = element_text(hjust = 0.5))
ggplot(d_respondents, aes(x=Survey_Duration/60, fill = as.factor(Assignment_Group), colour=as.factor(Assignment_Group))) +
geom_density(alpha = 0.35) +
xlim(0,30) +
ggtitle("Survey Duration by Assignment Group") +
labs(x = "Minutes") +
geom_vline(xintercept = mean((d_respondents$Survey_Duration)/60 + (2 *((d_respondents$Survey_Duration)/60), linetype="dotted", color = "blue", size = 0.5) +
ggplot(d_respondents, aes(x=Survey_Duration/60, fill = as.factor(Assignment_Group), colour=as.factor(Assignment_Group))) +
geom_density(alpha = 0.35) +
xlim(0,30) +
ggtitle("Survey Duration by Assignment Group") +
labs(x = "Minutes") +
geom_vline(xintercept = mean((d_respondents$Survey_Duration)/60 + (2 *((d_respondents$Survey_Duration)/60), linetype="dotted", color = "blue", size = 0.5) +
ggplot(d_respondents, aes(x=Survey_Duration/60, fill = as.factor(Assignment_Group), colour=as.factor(Assignment_Group))) +
geom_density(alpha = 0.35) +
xlim(0,30) +
ggtitle("Survey Duration by Assignment Group") +
labs(x = "Minutes") +
geom_vline(xintercept = mean((d_respondents$Survey_Duration)/60) + (2 *((d_respondents$Survey_Duration)/60)), linetype="dotted", color = "blue", size = 0.5) +
theme(plot.title = element_text(hjust = 0.5))
ggplot(d_respondents, aes(x=Survey_Duration/60, fill = as.factor(Assignment_Group), colour=as.factor(Assignment_Group))) +
geom_density(alpha = 0.35) +
xlim(0,30) +
ggtitle("Survey Duration by Assignment Group") +
labs(x = "Minutes") +
geom_vline(xintercept = mean((d_respondents$Survey_Duration)/60) + (2 *(sd(d_respondents$Survey_Duration)/60)), linetype="dotted", color = "blue", size = 0.5) +
theme(plot.title = element_text(hjust = 0.5))
ggplot(d_respondents, aes(x=Survey_Duration/60, fill = as.factor(Assignment_Group), colour=as.factor(Assignment_Group))) +
geom_density(alpha = 0.35) +
xlim(0,60) +
ggtitle("Survey Duration by Assignment Group") +
labs(x = "Minutes") +
geom_vline(xintercept = mean((d_respondents$Survey_Duration)/60) + (2 *(sd(d_respondents$Survey_Duration)/60)), linetype="dotted", color = "blue", size = 0.5) +
theme(plot.title = element_text(hjust = 0.5))
max(d_respondents$Survey_Duration)/60
d_respondents[Survey_Duration > 5000]
d_respondents <- d_respondents[Survey_Duration < 5000]
max(d_respondents$Survey_Duration)/60
ggplot(d_respondents, aes(x=Survey_Duration/60, fill = as.factor(Assignment_Group), colour=as.factor(Assignment_Group))) +
geom_density(alpha = 0.35) +
xlim(0,60) +
ggtitle("Survey Duration by Assignment Group") +
labs(x = "Minutes") +
geom_vline(xintercept = mean((d_respondents$Survey_Duration)/60) + (2 *(sd(d_respondents$Survey_Duration)/60)), linetype="dotted", color = "blue", size = 0.5) +
theme(plot.title = element_text(hjust = 0.5))
mean((d_respondents$Survey_Duration)/60) + (2 *(sd(d_respondents$Survey_Duration)/60))
completions <- d_respondents[Survey_Duration < 5000]
max(completions$Survey_Duration)/60
ggplot(completions, aes(x=Survey_Duration/60, fill = as.factor(Assignment_Group), colour=as.factor(Assignment_Group))) +
geom_density(alpha = 0.35) +
xlim(0,60) +
ggtitle("Survey Duration by Assignment Group") +
labs(x = "Minutes") +
geom_vline(xintercept = mean((completions$Survey_Duration)/60) + (2 *(sd(completions$Survey_Duration)/60)), linetype="dotted", color = "blue", size = 0.5) +
theme(plot.title = element_text(hjust = 0.5))
outlier <- max(completions$Survey_Duration)/60
completions <- d_respondents[Survey_Duration < 5000]
outlier <- max(completions$Survey_Duration)/60
outliers <- d_respondents[Survey_Duration > 60*60]
outliers
d_respondents
outliers <- d_respondents[Survey_Duration > 60*60]
opts_knit$set()
options(digits=4)
knitr::opts_chunk$set(echo = TRUE)
outlier <- d_respondents[Survey_Duration > 60*60]
outlier
outlier <- d_respondents[Survey_Duration > 60*60]
completions <- d_respondents[Survey_Duration < 5000]
ggplot(completions, aes(x=Survey_Duration/60, fill = as.factor(Assignment_Group), colour=as.factor(Assignment_Group))) +
geom_density(alpha = 0.35) +
xlim(0,60) +
ggtitle("Survey Duration by Assignment Group") +
labs(x = "Minutes") +
geom_vline(xintercept = mean((completions$Survey_Duration)/60) + (2 *(sd(completions$Survey_Duration)/60)), linetype="dotted", color = "blue", size = 0.5) +
theme(plot.title = element_text(hjust = 0.5))
outlier <- d_respondents[Survey_Duration > 60*60]
completions <- d_respondents[Survey_Duration < 5000]
ggplot(completions, aes(x=Survey_Duration/60, fill = as.factor(Assignment_Group), colour=as.factor(Assignment_Group))) +
geom_density(alpha = 0.35) +
xlim(0,60) +
ggtitle("Survey Duration by Assignment Group (sans Outlier") +
labs(x = "Minutes") +
geom_vline(xintercept = mean((completions$Survey_Duration)/60) + (2 *(sd(completions$Survey_Duration)/60)), linetype="dotted", color = "blue", size = 0.5) +
theme(plot.title = element_text(hjust = 0.5))
max(d_respondents$Survey_Duration)
max(d_respondents$Survey_Duration/60)
library(foreign)
library(data.table)
library(knitr)
library(cobalt)
library(stargazer)
library(sandwich)
library(car)
library(dplyr)
library(ggmap)
library(revgeo)
library(AER)
library(ggplot2)
library(expss)
library(grid)
library(gridExtra)
library(pander)
opts_knit$set()
options(digits=4)
knitr::opts_chunk$set(echo = TRUE)
d_respondents <- fread('datatable_clean_survey_responses_v2.dta')
max(d_respondents$Survey_Duration/60)
completions <- d_respondents[Survey_Duration < 5000]
max(d_respondents$Survey_Duration/60)
max(d_respondents$Survey_Duration)/60
completions <- d_respondents[Survey_Duration < 5000]
completions <- d_respondents[Survey_Duration < 5000]
max(d_respondents$Survey_Duration)/60
outliers <- d_respondents[Survey_Duration > 60*60]
completions <- d_respondents[Survey_Duration < 5000]
library(foreign)
library(data.table)
library(knitr)
library(cobalt)
library(stargazer)
library(sandwich)
library(car)
library(dplyr)
library(ggmap)
library(revgeo)
library(AER)
library(ggplot2)
library(expss)
library(grid)
library(gridExtra)
library(pander)
opts_knit$set()
options(digits=4)
knitr::opts_chunk$set(echo = TRUE)
d_respondents <- fread('datatable_clean_survey_responses_v2.dta')
max(d_respondents$Survey_Duration)/60
max(d_respondents$Survey_Duration)
d_respondents[Survey_Duration < 5000]
head(d_respondents)
d_respondents
max(d_respondents$`Duration (in seconds)`)
max(d_respondents$`Duration (in seconds)`)/60
d_respondents[`Duration (in seconds)` > 30*30]
d_respondents[`Duration (in seconds)` > 60*60]
d_respondents[`Duration (in seconds)` > 60*60, .N]
d_respondents[`Duration (in seconds)` > 60*45, .N]
d_respondents[`Duration (in seconds)` > 60*45, .N]
d_respondents[`Duration (in seconds)` > 60*40, .N]
d_respondents[`Duration (in seconds)` > 60*30, .N]
d_respondents[`Duration (in seconds)` > 60*30, .N]
completions <- d_respondents[`Duration (in seconds)` < 60*30]
completions <- d_respondents[`Duration (in seconds)` < 60*30, .N]
#how many survey responses took over 30 minutes
d_respondents[`Duration (in seconds)` > 60*30, .N]
completions <- d_respondents[`Duration (in seconds)` < 60*30, .N]
ggplot(completions, aes(x=`Duration (in seconds)`/60, fill = as.factor(Assignment_Group), colour=as.factor(Assignment_Group))) +
geom_density(alpha = 0.35) +
xlim(0,60) +
ggtitle("Survey Duration by Assignment Group (sans Outlier") +
labs(x = "Minutes") +
geom_vline(xintercept = mean((completions$`Duration (in seconds)`)/60) + (2 *(sd(completions$`Duration (in seconds)`)/60)), linetype="dotted", color = "blue", size = 0.5) +
theme(plot.title = element_text(hjust = 0.5))
d_respondents[`Duration (in seconds)` > 60*30, .N]
completions <- d_respondents[`Duration (in seconds)` < 60*30, .N]
completions
#how many survey responses took over 30 minutes
d_respondents[`Duration (in seconds)` > 60*30, .N]
completions <- d_respondents[`Duration (in seconds)` < 60*30]
ggplot(completions, aes(x=`Duration (in seconds)`/60, fill = as.factor(Assignment_Group), colour=as.factor(Assignment_Group))) +
geom_density(alpha = 0.35) +
xlim(0,60) +
ggtitle("Survey Duration by Assignment Group (sans Outlier") +
labs(x = "Minutes") +
geom_vline(xintercept = mean((completions$`Duration (in seconds)`)/60) + (2 *(sd(completions$`Duration (in seconds)`)/60)), linetype="dotted", color = "blue", size = 0.5) +
theme(plot.title = element_text(hjust = 0.5))
d_respondents[`Duration (in seconds)` > 60*30, .N]
d_respondents[`Duration (in seconds)` > 60*30]
d_respondents[`Duration (in seconds)` > 60*30, `Duration (in seconds)`/60]
d_respondents[`Duration (in seconds)` > 60*30, `Duration (in seconds)`/60/60]
#how many survey responses took over 30 minutes
d_respondents[`Duration (in seconds)` > 60*30, .N]
outlier <- d_respondents[`Duration (in seconds)` > 60*30, `Duration (in seconds)`/60/60]
completions <- d_respondents[`Duration (in seconds)` < 60*30]
ggplot(completions, aes(x=`Duration (in seconds)`/60, fill = as.factor(Assignment_Group), colour=as.factor(Assignment_Group))) +
geom_density(alpha = 0.35) +
xlim(0,60) +
ggtitle("Survey Duration by Assignment Group (sans Outlier") +
labs(x = "Minutes") +
geom_vline(xintercept = mean((completions$`Duration (in seconds)`)/60) + (2 *(sd(completions$`Duration (in seconds)`)/60)), linetype="dotted", color = "blue", size = 0.5) +
theme(plot.title = element_text(hjust = 0.5))
upper_cl <- mean((completions$`Duration (in seconds)`)/60) + (2 *(sd(completions$`Duration (in seconds)`)/60)
upper_cl
upper_cl <- mean((completions$`Duration (in seconds)`)/60) + (2 *(sd(completions$`Duration (in seconds)`)/60))
upper_cl
#n survey responses > 30 mins., take outlier out for analysis but discuss below
d_respondents[`Duration (in seconds)` > 60*30, .N]
outlier <- d_respondents[`Duration (in seconds)` > 60*30, `Duration (in seconds)`/60/60]
completions <- d_respondents[`Duration (in seconds)` < 60*30]
#95% of participants finished below this point in mins.
upper_cl <- mean((completions$`Duration (in seconds)`)/60) + (2 *(sd(completions$`Duration (in seconds)`)/60))
#density plot of time completed by assignment group in mins.
ggplot(completions, aes(x=`Duration (in seconds)`/60, fill = as.factor(Assignment_Group), colour=as.factor(Assignment_Group))) +
geom_density(alpha = 0.35) +
xlim(0,60) +
ggtitle("Survey Duration by Assignment Group (sans Outlier)") +
labs(x = "Minutes") +
geom_vline(xintercept = upper_cl, linetype="dotted", color = "blue", size = 0.5) +
theme(plot.title = element_text(hjust = 0.5))
d_respondents[`Duration (in seconds)` > 60*30, .N]
#n survey responses > 30 mins., take outlier out for analysis but discuss below
outlier <- d_respondents[`Duration (in seconds)` > 60*30, `Duration (in seconds)`/60/60]
completions <- d_respondents[`Duration (in seconds)` < 60*30]
#95% of participants finished below this point in mins.
upper_cl <- mean((completions$`Duration (in seconds)`)/60) + (2 *(sd(completions$`Duration (in seconds)`)/60))
#density plot of time completed by assignment group in mins.
ggplot(completions, aes(x=`Duration (in seconds)`/60, fill = as.factor(Assignment_Group), colour=as.factor(Assignment_Group))) +
geom_density(alpha = 0.35) +
xlim(0,60) +
ggtitle("Survey Duration by Assignment Group (sans Outlier)") +
labs(x = "Minutes") +
geom_vline(xintercept = upper_cl, linetype="dotted", color = "blue", size = 0.5) +
theme(plot.title = element_text(hjust = 0.5))
upper_cl <- round(mean((completions$`Duration (in seconds)`)/60) + (2 *(sd(completions$`Duration (in seconds)`)/60)), 2)
upper_cl
upper_cl <- round(mean((completions$`Duration (in seconds)`)/60) + (2 *(sd(completions$`Duration (in seconds)`)/60)), 1)
upper_cl
outlier <- d_respondents[`Duration (in seconds)` > 60*30, `Duration (in seconds)`/60/60]
outlier
outlier <- round(d_respondents[`Duration (in seconds)` > 60*30, `Duration (in seconds)`/60/60],1)
outlier
completions[, round(`Duration (in seconds)`)/60) + (2*`Duration (in seconds)`/60),1)]
completions[, round(`Duration (in seconds)`)/60) + (2*`Duration (in seconds)`/60)), 1)]
completions[, round(`Duration (in seconds)`)/60) + (2*`sd(Duration (in seconds)`/60), 1)]
completions[, `Duration (in seconds)`)/60) + (2*`sd(Duration (in seconds)`/60)]
completions[, `Duration (in seconds)`)/60) + (2 * `sd(Duration (in seconds)`)/60)]
completions[, mean((`Duration (in seconds)`)/60) + (2 *(sd(`Duration (in seconds)`)/60))]
completions[, round(mean((`Duration (in seconds)`)/60) + (2 *(sd(`Duration (in seconds)`)/60)), 1)]
